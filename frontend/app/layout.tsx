// import type { Metadata } from "next";
// import {
//   ClerkProvider,
// } from "@clerk/nextjs";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import ResponsiveAppBar from "@/components/navbar"; // <-- Import the app bar

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Clerk Next.js Quickstart",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <ClerkProvider>
//       <html lang="en">
//         <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//           <ResponsiveAppBar />
//           {children}
//         </body>
//       </html>
//     </ClerkProvider>
//   );
// }


import { ClerkProvider } from "@clerk/nextjs";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ResponsiveAppBar from "@/components/navbar";
import { Toaster } from "sonner";
import { ThemeProvider } from "@/context/ThemeContext"; 

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

export const metadata = {
  title: "CP-Mate",
  description: "Competitive programming dashboard",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased transition-colors duration-500`}
        >
          <ThemeProvider>
            <ResponsiveAppBar />
            <Toaster position="top-right" richColors />
            {children}
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}


// if needed for navbar add this befor children <ResponsiveAppBar /> in body.